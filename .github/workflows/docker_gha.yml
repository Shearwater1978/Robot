name: Docker
run-name: Dockerfile lint and test ðŸš€
on:
  workflow_dispatch:
    inputs:
      mode:
        description: 'Override for build Docker image from main branch'
        required: false
        default: 'nope'
      bypass_checks:
        type: boolean
        default: false
        description: Do not fail pipeline if checks failed
      bypass_ort:
        type: boolean
        default: false
        description: Do not fail pipeline if ORT scan failed
      
  # push:
  #   paths:
  #     - '**/Dockerfile'
  #     - '**/app/'
jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: |
          env
          exit
        env:
          A: ${{ inputs.bypass_checks }}
          B: ${{ inputs.bypass_ort }}

  Hadolint:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Validate Dockerfile with Hadolint tools
          run: |
            export VERSION=$(wget -q -O - https://api.github.com/repos/hadolint/hadolint/releases/latest | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
            wget https://github.com/hadolint/hadolint/releases/download/v${VERSION}/hadolint-Linux-x86_64 -O /tmp/hadolint && chmod +x /tmp/hadolint
            /tmp/hadolint -f json --no-fail Dockerfile

  Build:
    runs-on: ubuntu-latest
    if: ${{ (github.ref != 'refs/heads/main') || (github.event.inputs.mode == 'yep') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Test
        run: |
          env
          exit
        env:
          A: ${{ inputs.mode }}
          B: ${{ inputs.second }}
          C: ${{ inputs.mode || inputs.second }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          push: false
          context: .
          tags: robot:latest
